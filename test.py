S = '''2015-12429 100 100 100 95 100 60 87 79
2019-15668 100 100 100 95 100 83 82 70
2016-17334 100 100 100 95 0 0 90 57
2014-10766 100 100 80 89 60 - 54 47
2016-10914 0 0 0 - - - 0 0
2019-27519 0 0 0 - - - 0 0
2017-13844 0 0 0 - - - 0 0
2017-18975 100 100 100 95 100 87 99 91
2016-12913 80 0 20 95 36.2 - 56 45
2020-14206 100 100 100 95 100 100 73 45
2019-15609 100 100 100 92.5 100 60 54 55
2020-16655 100 100 100 100 95.2 100 100 60
2017-11232 100 100 80 100 95.2 100 100 75
2016-17096 100 100 100 95 100 100 71 55
2017-13385 100 100 100 100 88 60 80 60
2020-19171 0 0 0 - - - 0 0
2016-10404 100 100 100 95 100 60 67.5 55
2017-10854 0 0 0 - - - 0 0
2020-11294 100 100 100 95 99 100 82 60
2021-19582 1 0 0 - - - 0 0
2017-15019 0 100 100 95 35 100 55 72
2020-19981 100 100 100 99 95.2 60 68 73
2020-17316 80 100 100 95 100 80 95 72
2021-19025 100 100 100 95 100 100 100 59
2016-18720 100 37 100 76 1 100 66.5 55
2019-19502 0 0 0 - - - 0 0
2020-13758 0 0 0 - - - 0 0
2019-15866 100 100 100 95 100 24 67 60
2020-15188 100 100 100 100 95.2 80 63 50
2018-13447 100 100 100 95 81.9 16.8 76 72
2016-11018 0 0 0 - - - 0 0
2018-16714 0 0 0 - - - 0 0
2017-13143 0 0 0 - - - 0 0
2018-18489 100 100 100 95 100 60 69.5 45
2014-11217 100 100 100 95 96 - 77 50
2017-16289 100 100 100 95 100 60 84 65
2020-11269 100 100 100 92.5 95.2 80 67 78
2020-13457 100 100 100 100 96 100 77 51
2015-10694 0 0 0 - - - 0 0
2017-16109 100 100 0 35 - - 69 25
2021-12689 100 100 100 95 0 100 92 70
2017-13918 100 9 100 92.5 79 - 49 50
2016-11978 100 40 0 - - - 0 0
2020-15313 1 80 80 59 0 - 78.5 40
2017-19419 60 9 80 95 0.8 0 62 45
2019-11700 100 100 100 95 100 100 80 55
2020-11816 100 100 100 80 100 100 92 75
2020-11217 100 100 100 95 95.2 60 100 57
2019-10830 100 100 99 59 92.4 41 86 55
2019-11337 100 100 97 95 100 100 92 72
2017-18700 100 100 100 95 95.2 60 82 65
2021-10622 100 40 100 95 100 100 96 78
2017-18348 100 100 100 95 100 97 72 73
2015-12100 100 100 100 95 95.2 60 85 70
2018-18911 93 80 100 95 61 1 56 35
2021-13630 100 100 100 95 0 80 87 80
2019-16094 0 0 0 - - - 0 0
2012-11421 0 0 0 - - - 0 0
2017-15984 100 100 0 - - - 0 60
2021-23873 100 100 100 95 100 60 78 60
2019-15635 100 100 100 95 60 100 80 66
2020-14094 47 3.2 100 58 - - 49 20
2018-13327 0 0 0 - - - 0 0
2020-17870 0 0 0 - - - 0 0
2020-17164 100 100 100 95 100 60 95 58
2019-10479 100 100 99 100 100 80 76 76
2017-17047 100 100 100 95 94.3 60 85 72
2013-11380 75 0 0 - - 1 21 17
2018-17015 100 100 100 90 100 60 94 66
2019-11671 0 0 0 - - - 0 0
2018-14070 100 100 100 95 95.2 60 72 53
2018-18040 100 80 100 95 76.2 60 71 55
2016-16340 0 0 0 - 0 - 0 0
2015-18362 100 100 100 94 100 60 48 60
2020-11972 0 0 0 - - - 0 0
2018-10052 100 100 100 95 99 60 70 77
2019-16202 100 80 100 100 100 60 85 98
2020-14519 100 100 100 95 100 60 88 57
2019-23889 0 0 0 - - - 0 0
2017-17144 100 100 100 95 95.2 60 71 77
2018-16097 100 100 100 95 95.2 60 73 45
2016-13274 0 0 0 - - - 0 0
2016-12438 100 100 100 95 95.2 - 60 41
2019-17346 100 100 81 95 54 1 90 35
2020-16032 100 100 100 95 95.2 100 61.5 41
2017-19763 100 100 100 95 100 80 69 65
2016-17357 20 100 100 95 100 60 71 51
2018-14117 41 100 100 94 100 60 77 62
2019-11618 100 100 100 95 100 90 98 60
2017-13309 100 100 100 95 100 60 95 53
2019-11563 100 1 100 95 - - 68 26
2016-12394 100 100 100 95 100 100 64 33
2015-12054 0 0 0 - - - 0 0
2018-18699 100 100 100 90.5 100 60 84 56
2019-12918 100 100 100 90 8.8 60 87 63
2015-14879 100 100 100 95 95.2 60 85 50
2016-11848 0 0 99 95 94.3 0.8 43 34
2017-14673 27 100 100 95 78.4 100 36 45
2017-18963 100 100 100 95 80 60 77 67
2015-19611 100 100 100 95 96 100 62 59
2017-14417 100 20 80 95 100 60 28 55
2019-18434 100 80 100 95 100 100 91 42
2016-14788 0 0 0 - - - 0 0
2019-11215 100 100 100 95 97 58 54 64
2019-18841 0 0 0 - - - 0 0
2017-12146 100 100 100 95 100 100 57.5 72
2020-10614 100 100 100 - 100 - 76 0
2019-12711 100 100 100 100 100 60 29 45
2019-14240 100 100 100 100 100 60 75 60
2020-12119 100 100 100 92.5 100 100 100 72
2017-11389 100 100 100 95 95.2 100 96 55
2020-10461 100 100 100 95 100 100 92 98
2020-19422 0 0 0 - - - 52 0
2020-11513 100 100 100 95 100 100 95 64
2016-17264 100 100 100 95 100 85 69 70
2013-12815 0 40 0 - - - 56.5 0
2016-19676 100 100 100 95 100 85 53 62
2016-15362 0 0 0 - - - 0 0
2019-11362 100 100 100 95 91.4 100 59 48
2017-19651 100 100 100 95 95.2 60 63.5 34
2015-16506 100 100 100 95 95.2 80 82 45
2017-13372 100 100 100 90 100 60 95 67
2017-17569 100 100 100 95 95.2 78 69 53
2014-14813 0 0 100 47 0 0 52 40
2016-10556 100 100 100 95 100 67 44 55
2019-13291 100 100 100 95 100 100 39 36
2020-16033 100 100 100 50 - - 45 10
2018-10975 100 100 100 100 100 100 100 79
2016-18878 80 0 80 90 35.2 - 58 45
2016-14709 100 100 100 95 95.2 60 80 75
2017-11738 0 0 0 - - - 0 0
2020-12768 88 100 100 95 80 80 57 76
2017-13108 100 100 100 95 97 84 70 60
2018-13639 0 0 0 - - - 0 0
2017-17078 52 100 100 95 100 48 59 40
2017-11310 100 100 100 95 80 1 78 51
2017-14465 0 0 0 0 - - 36 37
2020-10174 100 100 100 95 100 100 100 71
2016-19467 100 100 100 100 0 0 45 51
2017-14998 100 100 100 85 100 80 89 60
2020-19402 100 100 100 100 95.2 100 66 45
2013-10767 0 0 0 - - - 0 0
2019-14735 20 100 100 95 - - 80 12
2016-16383 100 100 100 94.5 100 60 36.5 46
2017-17608 100 100 100 95 95.2 100 57 46
2016-10957 100 100 100 95 96 60 95 71
2015-17167 0 0 0 - - - 0 0
2017-12147 100 100 100 100 100 100 100 65
2021-29407 0 0 0 - - - 0 0
2017-19046 100 100 100 94.5 44 60 87 67
2019-18870 100 100 100 95 95.2 48 70 39
2018-15999 100 100 100 92.5 100 60 80.5 46
2019-12863 100 100 100 95 100 64 89 60
2018-16371 100 100 100 95 100 100 72 45
2010-10057 0 0 0 - - - 0 0
2016-19435 100 100 100 95 100 60 96 60
2016-19544 0 0 0 - - - 0 0
2017-13092 100 100 100 95 100 63 63 40
2019-17680 100 100 100 95 100 60 77 65
2019-17686 100 100 100 95 96 60 57 62
2015-18825 0 0 0 - - - 0 0
2020-19851 0 0 0 - - - 0 0
2019-10821 100 1 100 93 100 60 63 54
2017-10291 100 100 100 95 100 100 83 80
2018-15163 21 100 100 95 95.2 68 100 57
2017-10338 0 0 0 - - - 0 0
2018-10969 100 100 79.2 95 95.2 100 57 42
2020-11477 100 100 100 95 97 100 80 75
2019-18629 100 100 100 95 80 7.2 68 56
2020-12383 100 100 100 95 100 100 66 60
2020-11521 100 100 100 95 100 100 100 75
2020-10966 100 100 100 95 100 100 87 55
2010-10075 0 0 0 - - - 0 0
2015-15646 0 0 0 - - - 0 0
2020-18252 0 0 0 - - - 0 0
2014-15667 0 0 0 - - - 0 0
2016-10164 100 100 100 95 100 100 75.5 50
2020-12869 100 100 100 90.5 95.2 60 78 77
2017-18609 100 100 100 95 100 100 89 79
2018-19725 100 100 17.6 - - - 45 26
2019-11600 100 100 100 95 95.2 60 79 82
2019-13690 100 100 100 100 100 60 71 84
2017-10148 100 100 100 95 95.2 100 79 60
2018-19797 100 100 100 95 99 100 68 50
2018-17119 100 100 100 95 100 100 77 50
2017-14693 100 100 100 95 100 100 87 89
2020-26958 0 0 0 0 - - 0 0
2019-19630 100 100 99 95 91.4 6.4 60 55
2017-19567 80 60 99 95 91.4 60 74 52
2016-11401 100 100 100 89.5 100 1 73 50
2020-14677 0 0 0 - - - 0 0
2018-10036 100 100 100 95 100 60 100 55
2014-12756 0 0 0 - - - 0 0
2019-18020 26 100 87 67.5 79.2 80 31 35
2019-14586 67 100 100 95 76.2 48 63 78
2020-17585 100 100 100 85.5 95.2 3 70 61
2019-19153 100 80 100 95 100 100 83 95
2019-13930 100 100 100 100 94.3 11 46 60
2018-16169 100 80 100 95 80 48 65 74
2016-15579 100 100 100 95 100 60 79 79
2015-16306 0 0 35 89.5 0 80 58.5 0
2017-15200 100 100 100 95 100 100 90 90
2017-16403 100 100 100 95 10.5 74 71 45
2014-14999 0 0 0 - - - 0 0
2018-19000 89 0 0 - - - 0 0
2017-17394 100 100 100 87.5 100 60 79 79
2016-18190 100 100 100 95 100 97 79 80
2015-17258 100 100 100 80 100 100 45 29
2020-13698 100 100 100 80 95.2 60 77 77
2020-17357 0 39.2 28.8 - - - 52 50
2018-17893 100 100 100 95 100 60 91 69
2018-13797 100 100 100 95 93.3 80 51 40
2019-12246 100 100 100 95 95.2 60 100 56
2013-22209 0 0 0 - - - 0 0
2020-10015 100 100 100 95 100 66 100 75
2017-19003 0 0 0 - - - 0 0
2016-10501 100 100 100 90 95.2 60 55 40
2019-13982 100 100 100 92.5 76.2 48 78 45
2018-17514 100 100 100 95 95.2 100 92 55
2019-18448 0 0 0 - - - 0 0
2020-14539 93 43 10 95 - - 87 50
2020-16997 100 100 100 95 97 100 95 60
2021-90398 100 100 63 89.5 - 1 68 40
2021-90523 0 0 0 - - - 0 0'''
def f(i):
    return 0 if i == '-' else float(i)
A = []
for i in S.split('\n'):
    T = i.split()
    R = sum(map(f, T[1:7])) / 6 + f(T[7]) + f(T[8])
    A.append((R, T[0]))
A.sort()
print(A)
# for i in range(len(A)):
#     if A[i] >= 점수:
#         break
print(i, len(A))